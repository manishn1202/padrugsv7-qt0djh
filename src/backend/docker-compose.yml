version: "3.8"

# Define shared networks for service isolation
networks:
  epa-network:
    driver: bridge
    name: epa-network
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.driver.mtu: "1450"

# Define persistent volumes
volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  model-cache:
    driver: local

# Service definitions
services:
  # API Gateway Service
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: epa-api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - AUTH_SERVICE_URL=http://auth-service:8081
      - WORKFLOW_SERVICE_URL=http://workflow-service:8083
      - AI_SERVICE_URL=http://ai-service:8000
      - RATE_LIMIT_WINDOW=15m
      - RATE_LIMIT_MAX=1000
      - LOG_LEVEL=info
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    networks:
      - epa-network
    depends_on:
      auth-service:
        condition: service_healthy
      workflow-service:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    read_only: true

  # Workflow Service
  workflow-service:
    build:
      context: ./workflow-service
      dockerfile: Dockerfile
    container_name: epa-workflow-service
    ports:
      - "8083:8083"
      - "9404:9404"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xms4g -Xmx4g -XX:+UseG1GC -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/var/log/heap-dumps
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/epa
      - SPRING_REDIS_HOST=redis-cache
      - SPRING_REDIS_PORT=6379
      - DROOLS_RULES_PATH=/app/rules
    volumes:
      - /var/log/workflow-service:/var/log/workflow-service
      - /var/log/heap-dumps:/var/log/heap-dumps
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G
    networks:
      - epa-network
    depends_on:
      postgres-db:
        condition: service_healthy
      redis-cache:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    read_only: true

  # AI Service
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: epa-ai-service
    ports:
      - "8000:8000"
      - "50051:50051"
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - PORT=8000
      - GRPC_PORT=50051
      - MODEL_CACHE_DIR=/app/models
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_LEVEL=info
    volumes:
      - model-cache:/app/models:ro
      - /var/log/ai-service:/app/logs
    deploy:
      resources:
        limits:
          cpus: '8'
          memory: 16G
          nvidia.com/gpu: 1
        reservations:
          cpus: '4'
          memory: 8G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    networks:
      - epa-network
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    read_only: true

  # PostgreSQL Database
  postgres-db:
    image: postgres:15-alpine
    container_name: epa-postgres
    environment:
      - POSTGRES_DB=epa
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d epa"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G
    networks:
      - epa-network
    security_opt:
      - no-new-privileges:true

  # Redis Cache
  redis-cache:
    image: redis:7-alpine
    container_name: epa-redis
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 4gb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    networks:
      - epa-network
    security_opt:
      - no-new-privileges:true