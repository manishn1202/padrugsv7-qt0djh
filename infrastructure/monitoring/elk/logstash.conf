# Logstash Configuration v8.9.0
# Enhanced Prior Authorization System
# Purpose: Secure, HIPAA-compliant log ingestion, processing, and forwarding

# Global Performance Settings
pipeline.workers: 4
pipeline.batch.size: 1000
pipeline.batch.delay: 50
queue.type: persisted
queue.max_bytes: 1gb
path.queue: /var/lib/logstash/queue
path.dead_letter_queue: /var/lib/logstash/dlq
dead_letter_queue.enable: true
monitoring.enabled: true

input {
  # Filebeat Input
  beats {
    port => 5044
    ssl => true
    ssl_certificate => "/etc/logstash/certs/logstash.crt"
    ssl_key => "/etc/logstash/certs/logstash.key"
    ssl_verify_mode => "force_peer"
    cipher_suites => [
      "TLS_AES_256_GCM_SHA384",
      "TLS_CHACHA20_POLY1305_SHA256"
    ]
  }

  # TCP JSON Input
  tcp {
    port => 5000
    codec => json_lines
    ssl => true
    ssl_certificate => "/etc/logstash/certs/logstash.crt"
    ssl_key => "/etc/logstash/certs/logstash.key"
    ssl_verify_mode => "force_peer"
    cipher_suites => [
      "TLS_AES_256_GCM_SHA384",
      "TLS_CHACHA20_POLY1305_SHA256"
    ]
  }

  # HTTP Input
  http {
    port => 8080
    ssl => true
    ssl_certificate => "/etc/logstash/certs/logstash.crt"
    ssl_key => "/etc/logstash/certs/logstash.key"
    auth_basic => {
      "username" => "${HTTP_USER}"
      "password" => "${HTTP_PASSWORD}"
    }
    cipher_suites => [
      "TLS_AES_256_GCM_SHA384",
      "TLS_CHACHA20_POLY1305_SHA256"
    ]
  }
}

filter {
  # Common Grok Pattern for Structured Logging
  grok {
    patterns_dir => ["/etc/logstash/patterns", "/etc/logstash/custom_patterns"]
    match => {
      "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:log_level} [%{DATA:service}] [%{DATA:trace_id}] %{GREEDYDATA:message}"
    }
  }

  # Timestamp Processing
  date {
    match => ["timestamp", "ISO8601"]
    target => "@timestamp"
    timezone => "UTC"
  }

  # JSON Parsing
  json {
    source => "message"
    target => "parsed_json"
    skip_on_invalid_json => true
  }

  # Field Enhancement
  mutate {
    add_field => {
      "environment" => "${ENV:production}"
      "application" => "epa-system"
      "datacenter" => "${DC_LOCATION}"
      "host_ip" => "%{[host][ip]}"
    }
  }

  # Service-Specific Processing
  if [service] =~ "workflow-service.*" {
    mutate { add_tag => ["workflow"] }
  } else if [service] =~ "document-service.*" {
    mutate { add_tag => ["document"] }
  } else if [service] =~ "ai-service.*" {
    mutate { add_tag => ["ai"] }
  } else if [service] =~ "integration-service.*" {
    mutate { add_tag => ["integration"] }
  }
}

output {
  # Elasticsearch Output with Security
  elasticsearch {
    hosts => ["https://elasticsearch:9200"]
    ssl => true
    ssl_certificate_verification => true
    cacert => "/etc/logstash/certs/ca.crt"
    user => "${ELASTICSEARCH_USERNAME}"
    password => "${ELASTICSEARCH_PASSWORD}"
    
    # Index Management
    index => "epa-logs-%{[service]}-%{+YYYY.MM.dd}"
    template_name => "epa-logs"
    template_overwrite => true
    
    # ILM Settings
    ilm_enabled => true
    ilm_rollover_alias => "epa-logs"
    ilm_pattern => "{now/d}-000001"
    ilm_policy => "epa-logs-policy"

    # Pipeline Routing
    pipeline => {
      if "workflow" in [tags] {
        "workflow-service"
      } else if "document" in [tags] {
        "document-service"
      } else if "ai" in [tags] {
        "ai-service"
      } else if "integration" in [tags] {
        "integration-service"
      }
    }
  }

  # Dead Letter Queue for Failed Events
  if [@metadata][dead_letter_queue] {
    file {
      path => "/var/lib/logstash/dlq/%{+YYYY-MM-dd}-failed-events.log"
      codec => json
    }
  }
}

# Pipeline Configurations
pipeline "workflow-service" {
  workers => 4
  pattern => "epa-logs-workflow-*"
  priority => 100
}

pipeline "document-service" {
  workers => 4
  pattern => "epa-logs-document-*"
  priority => 90
}

pipeline "ai-service" {
  workers => 2
  pattern => "epa-logs-ai-*"
  priority => 80
}

pipeline "integration-service" {
  workers => 4
  pattern => "epa-logs-integration-*"
  priority => 70
}