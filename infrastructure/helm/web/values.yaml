# Enhanced PA System Web Portal Helm Values
# Version: 1.0.0
# Dependencies:
# - ingress-nginx: ^4.7.0
# - cert-manager: ^1.12.0
# - prometheus-operator: ^45.0.0

# Deployment configuration
replicaCount: 3

image:
  repository: epa-system/web
  tag: 1.0.0
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: registry-credentials

nameOverride: "epa-web"
fullnameOverride: "epa-web"

serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/epa-web-role
    iam.gke.io/gcp-service-account: epa-web@project-id.iam.gserviceaccount.com
  name: "epa-web-sa"

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "9113"
  prometheus.io/path: "/metrics"
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/role: "epa-web"

# Enhanced security context for pods
podSecurityContext:
  fsGroup: 101
  fsGroupChangePolicy: "OnRootMismatch"
  runAsNonRoot: true
  runAsUser: 101
  runAsGroup: 101
  seccompProfile:
    type: "RuntimeDefault"

# Container security context
securityContext:
  capabilities:
    drop:
      - "ALL"
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 101
  runAsGroup: 101
  allowPrivilegeEscalation: false

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 80
  protocol: TCP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800

# Ingress configuration with enhanced security
ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "8m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains";
  hosts:
    - host: app.epa-system.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: epa-web-tls
      hosts:
        - app.epa-system.com

# Resource limits and requests
resources:
  limits:
    cpu: "2"
    memory: 4Gi
  requests:
    cpu: 500m
    memory: 1Gi

# Horizontal Pod Autoscaling
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Pods
          value: 1
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Pods
          value: 2
          periodSeconds: 60

# Node selection and affinity
nodeSelector:
  kubernetes.io/os: linux
  node.kubernetes.io/purpose: app
  topology.kubernetes.io/zone: us-east-1a

tolerations:
  - key: "purpose"
    operator: "Equal"
    value: "app"
    effect: "NoSchedule"

# High availability pod anti-affinity
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
                - epa-web
        topologyKey: topology.kubernetes.io/zone
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - epa-web
          topologyKey: kubernetes.io/hostname

# Environment variables
env:
  VITE_APP_ENV: production
  VITE_API_BASE_URL: https://api.epa-system.com
  VITE_AUTH0_DOMAIN: epa-system.auth0.com
  VITE_AUTH0_AUDIENCE: https://api.epa-system.com

# Health probes
livenessProbe:
  httpGet:
    path: /health
    port: 80
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

readinessProbe:
  httpGet:
    path: /health
    port: 80
  initialDelaySeconds: 15
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

startupProbe:
  httpGet:
    path: /health
    port: 80
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 30
  successThreshold: 1

# Prometheus metrics configuration
metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: "30s"
    scrapeTimeout: "10s"
    namespace: monitoring
    labels:
      release: prometheus
    relabelings:
      - sourceLabels: ["__meta_kubernetes_pod_node_name"]
        targetLabel: node

# Pod Disruption Budget for high availability
podDisruptionBudget:
  enabled: true
  minAvailable: "50%"

# Network policies for enhanced security
networkPolicy:
  enabled: true
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - port: 80
          protocol: TCP