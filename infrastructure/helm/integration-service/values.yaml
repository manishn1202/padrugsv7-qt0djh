# Enhanced Prior Authorization Integration Service Helm Values
# Version: 1.0.0
# Dependencies: Chart.yaml v1.0.0

# Core deployment configuration
replicaCount: 3

# Container image configuration
image:
  repository: epa-system/integration-service
  tag: latest  # Should be overridden in deployment
  pullPolicy: Always

# Service account configuration for RBAC
serviceAccount:
  create: true
  name: integration-service-sa
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::123456789:role/integration-service-role"

# Pod annotations for monitoring, security, and management
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8083"
  prometheus.io/path: "/actuator/prometheus"
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/role: "integration-service"
  vault.hashicorp.com/agent-inject-secret-config: "integration-service/config"
  fluentbit.io/parser: "json"
  cluster-autoscaler.kubernetes.io/safe-to-evict: "true"

# Enhanced security context for HIPAA compliance
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000
  seccompProfile:
    type: RuntimeDefault
  supplementalGroups: [1000]

# Container security context
securityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  privileged: false
  runAsNonRoot: true

# Service configuration
service:
  type: ClusterIP
  port: 8083
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"

# Resource allocation
resources:
  requests:
    cpu: 500m
    memory: 1Gi
  limits:
    cpu: "2"
    memory: 4Gi

# Horizontal pod autoscaling
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
    scaleUp:
      stabilizationWindowSeconds: 60

# Health probes
livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: 8083
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3
  successThreshold: 1

readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: 8083
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

# Volume configurations
volumes:
  - name: config-volume
    configMap:
      name: integration-service-config
  - name: secrets-volume
    secret:
      secretName: integration-service-secrets
  - name: tmp-volume
    emptyDir:
      medium: Memory
      sizeLimit: 1Gi
  - name: audit-volume
    persistentVolumeClaim:
      claimName: integration-audit-pvc

volumeMounts:
  - name: config-volume
    mountPath: /app/config
    readOnly: true
  - name: secrets-volume
    mountPath: /app/secrets
    readOnly: true
  - name: tmp-volume
    mountPath: /tmp
  - name: audit-volume
    mountPath: /app/audit
    readOnly: false

# Integration-specific configurations
integrationConfig:
  fhir:
    enabled: true
    version: "R4"
    timeout: 30
    retries: 3
  ncpdp:
    enabled: true
    version: "SCRIPT_2017071"
    timeout: 20
    retries: 3
  rest:
    enabled: true
    timeout: 15
    retries: 2

# Network policies
networkPolicy:
  enabled: true
  ingressRules:
    - from:
        - namespaceSelector:
            matchLabels:
              name: workflow-service
        - podSelector:
            matchLabels:
              app: workflow-service

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Pod topology spread constraints
topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: topology.kubernetes.io/zone
    whenUnsatisfiable: DoNotSchedule
    labelSelector:
      matchLabels:
        app: integration-service

# Affinity and anti-affinity rules
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - integration-service
          topologyKey: kubernetes.io/hostname

# Node selector
nodeSelector:
  purpose: application
  eks.amazonaws.com/nodegroup: integration-services

# Tolerations
tolerations:
  - key: "dedicated"
    operator: "Equal"
    value: "integration-services"
    effect: "NoSchedule"